[gd_scene load_steps=5 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

//Noise texture only used if useSpriteTexture is set to false
uniform sampler2D noiseTexture;

//Wether to use shader param noise or texture as noise
uniform bool useSpriteTexture = false; 

//The speed of the movement
uniform float speed : hint_range(0.01,1.0) = 0.1; 

//How much it can differ from circle
uniform float amplitude : hint_range(0.01,1.0) = 0.2; 

float circle(vec2 center, float radius, vec2 p){
    return length(p - center) - radius;
}

void fragment(){
	vec4 noise;

	if (useSpriteTexture){
		noise = texture(TEXTURE, UV + speed * TIME) - 0.5;
	}
	else{
		noise = texture(noiseTexture, UV + speed * TIME) - 0.5;
	}
	
	float sdf = circle(vec2(0.5, 0.5), 0.2, UV) + amplitude * noise.r;

	if (sdf > 0.0){
		COLOR = vec4(1.0, 1.0, 1.0, 0.0);
	}
	else{
		COLOR = vec4(1.0, 1.0, 1.0, min(sdf*-200.0, 1.0));
	}
}"

[sub_resource type="OpenSimplexNoise" id=3]
period = 182.3
persistence = 0.0
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=4]
width = 1024
height = 600
seamless = true
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/useSpriteTexture = false
shader_param/speed = 0.051
shader_param/amplitude = 0.082
shader_param/noiseTexture = SubResource( 4 )

[node name="Ball" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": true
}
